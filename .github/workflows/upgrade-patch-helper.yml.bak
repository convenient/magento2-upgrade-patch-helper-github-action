on:
  workflow_call:
    inputs:
      working-dir:
        required: true
        type: string
      vendor-filter:
        required: false
        type: string

jobs:
  upgrade-patch-helper:
    runs-on: ubuntu-latest
    environment: production
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Additional SHOULD_RUN check [SHOULD_RUN=yes]
        if: env.SHOULD_RUN_UPGRADE_HELPER == 'yes'
        uses: docker://convenient/magento2-upgrade-patch-helper-github-action:shouldWeRunV1
        env:
          WORKING_DIRECTORY: ${{ inputs.working-dir }}
          VENDOR_FILTER: ${{ inputs.vendor-filter }}

      - name: Run upgrade patch helper [SHOULD_RUN=yes]
        if: env.SHOULD_RUN_UPGRADE_HELPER == 'yes'
        run: |
          /usr/bin/docker run --name magento2upgradepatchhelpergithubaction --workdir /github/workspace --rm -e WORKING_DIRECTORY=${{ inputs.working-dir }} -e GITHUB_ACTIONS=true -e CI=true -e "GITHUB_RUN_ID" -e "GITHUB_REPOSITORY" -e "GITHUB_SERVER_URL" -e "GITHUB_HEAD_REF" -e "GITHUB_BASE_REF" -v "$(pwd)":"/github/workspace" convenient/magento2-upgrade-patch-helper-github-action:RunPatchHelperV1
        # Run image manually so that the pull of the large docker image is delayed, pass over the necessary variables
        # TODO fully tag docker images

      - name: Upload vendor_files_to_check.patch [SHOULD_RUN=yes]
        if: env.SHOULD_RUN_UPGRADE_HELPER == 'yes'
        uses: actions/upload-artifact@v4
        with:
          name: vendor_files_to_check.patch
          path: ./${{ inputs.working-dir }}/vendor_files_to_check.patch

      - name: Upload patch-helper-output.txt [SHOULD_RUN=yes]
        if: env.SHOULD_RUN_UPGRADE_HELPER == 'yes'
        uses: actions/upload-artifact@v4
        with:
          name: patch-helper-output.txt
          path: ./${{ inputs.working-dir }}/patch-helper-output.txt

      - name: Upload classmap.json [SHOULD_RUN=yes]
        if: env.SHOULD_RUN_UPGRADE_HELPER == 'yes'
        uses: actions/upload-artifact@v4
        with:
          name: classmap.json
          path: ./${{ inputs.working-dir }}/classmap.json

      - name: Create or update PR comment [SHOULD_RUN=yes]
        if: env.SHOULD_RUN_UPGRADE_HELPER == 'yes'
        uses: actions/github-script@v7
        with:
          script: |
            const {data: comments} = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.number,
            })
            const searchString = "upgrade_patch_helper_metadata_do_not_reproduce_this_string_in_another_comment_or_it_will_confuse_matters";
            const commentWithSubstring = comments.find(comment => comment.body.includes(searchString));
            if (commentWithSubstring) {
              console.log('Updating previous comment with output');
              const fs = require('fs');
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: fs.readFileSync('./${{ inputs.working-dir }}/output-see-previous-comment.md', 'utf8')
              });
              github.rest.issues.updateComment({
                comment_id: commentWithSubstring.id,
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: fs.readFileSync('./${{ inputs.working-dir }}/patch-helper-output-formatted.md', 'utf8')
              });
            } else {
              console.log('Creating new comment');
              const fs = require('fs');
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: fs.readFileSync('./${{ inputs.working-dir }}/patch-helper-output-formatted.md', 'utf8')
              });
            }
      - name: Comment on pull request [SHOULD_RUN=no]
        if: env.SHOULD_RUN_UPGRADE_HELPER == 'no'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: fs.readFileSync('./${{ inputs.working-dir }}/output-not-needed.md', 'utf8')
            });
